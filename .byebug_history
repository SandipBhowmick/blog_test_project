c
params
c
result
c
comment_params
comment_params["user_id"]=20
comment_params
c
@comment.errors
c
@comment.errors
c
@post.comments.create(comment_params).valid?
n
n = @post.comments.create(comment_params)
n 
n = @post.comments.create(comment_params)
n = @post.comments.create
n.valid?
n = @post.comments.new
@post.comments.new
@post.build
@post.build_comments
@post.build_comment
@post.create_comment
@post =Post.find(params[:post_id])
@comment = @post.create_comment(comment_params)
@comment = @post.create_comments(comment_params)
@comment = @post.comments.build(comment_params)
@post =Post.find(params[:post_id])
c
@comment.save
@comment
@comment = @post.comments.build(comment_params)
@comment = @post.comments.create(comment_params)
comment_params
@post =Post.find(params[:post_id])
params
quit
c
cc
c
instance.error_message.first
c
instance.error_message.first
instance.error_message
instance.class
instance.classs
instance
c
@current_user
c
params
c
params[:id]
params[:follow]
params[follow]
params
c
@current_user
params.inspect
params[:user]
params
c
database_data.name
self.name
self.compare(database_data)
self == database_data
database_data
self
c
self
database_data
database_data.eql?(self)
database_data==self
database_data.compare(self)
self
database_data
c
(database_data).class
self.compare(database_data)
self
name
id
self.class.parent_id
self.class.name
self.class
database_data
c
id
self.class.find_by(id:"45")
self.class.find_by("45")
a.class
:parent_id
parent_id
a.name
a
a=self.class.find_by( :id=> "45")
self.class.find_by( :id=> "45")
self.class.find( :id=> "45")
self.class.where( :id=> "45")
id
self.class
self.class.parent_id
self.class.name
self.class.id
c
self.class.name
name
c
self.class.name
self.class
name
exit
parent_id
user_id
name
self.class
self
name
c
name
user_id
self.id
self.class.where(user_id: 1)
self.class
